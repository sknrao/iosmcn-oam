name: OAM Build

on:
  workflow_dispatch:

env:
  GHCR_REGISTRY: ghcr.io
  DOCKER_REGISTRY: docker.io
  GHCR_REPOSITORY: ios-mcn-smo
  CONTAINER_PUSH_REGISTRY: ghcr.io/ios-mcn-smo

jobs:
  authcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ secrets.GHCRUSER }}
          password: ${{ secrets.GHCRPASS }}

  oam-build:
    runs-on: ubuntu-latest
    needs: authcheck
    steps:
      - uses: actions/checkout@v3

      # Set up JDK 17 from Temurin distribution
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          java-package: 'jdk'
          check-latest: true

      # Cache Maven dependencies (uncomment when using self-hosted runners)
      #- name: Cache Maven packages
      #  uses: actions/cache@v3
      #  with:
      #    path: ~/.m2/repository
      #    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      #    restore-keys: |
      #      ${{ runner.os }}-maven-

      # Pull OpenJDK image from Docker Hub
      - name: Pull OpenJDK Docker image
        run: docker pull ${{ env.DOCKER_REGISTRY }}/openjdk:17-jdk

      # Build Maven project - DataFile Collector
      - name: Build with Maven
        working-directory: ./datafilecollector
        run: mvn clean install

      # Build Docker image with Maven using the pulled OpenJDK image
      - name: Build Docker image with Maven
        working-directory: ./datafilecollector
        run: mvn -Ddocker.image.name=${{ env.DOCKER_REGISTRY }}/openjdk:17-jdk install docker:build

      # Re-authenticate before pushing to GHCR
      - name: Login to GitHub Container Registry (ghcr.io) for push
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ secrets.GHCRUSER }}
          password: ${{ secrets.GHCRPASS }}

      # Tag Docker image
      - name: Tag Docker image
        run: |
          docker tag o-ran-sc/nonrtric-plt-ranpm-datafilecollector:1.2.0-SNAPSHOT ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}/datafile-collector:1.2.0-SNAPSHOT
          docker tag o-ran-sc/nonrtric-plt-ranpm-datafilecollector:1.2.0-SNAPSHOT ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}/datafile-collector:latest
          docker tag o-ran-sc/nonrtric-plt-ranpm-datafilecollector:1.2.0-SNAPSHOT ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}/datafile-collector:0.0.1

      # Push Docker image to GitHub Container Registry (GHCR)
      - name: Push Docker image to GHCR
        run: |
          docker push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}/datafile-collector:1.2.0-SNAPSHOT
          docker push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}/datafile-collector:latest
          docker push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}/datafile-collector:0.0.1
